<div class="container">
 
  <div class="row topText">
    <div class="col" class="lead">
      <main role="main" class="inner">
        <h1 class="cover-heading"><center>machineSpiritClaude</center></h1>
        <% unless current_user %>
        <h4><center>This conversational intelligence is meant to be a useful aid for general knowledge. It can teach concepts and provide understanding. A great tutor and aid for work and for learning.Powered by Anthropic.  </center></h4>
        <h4><center> Be very specific in your requests;<b> Great prompts create Great responses!</b></center> </h4>
      <% end %>

        <hr class="mt-2 mb-2">
        <div class="row">
          <% if @conversation_history.present? %>
          <div class="col" id="responsebox">
            <% @conversation_history.each do |message| %>
              <p><h5><%= message[:role] %>:</h5><b><i><%= message[:text]%></i></b></p>
               <% if message[:role] == "Assistant" %>
                 <hr>
               <% end %>  
            <% end %>
          </div>
        <% end %>
        </div>

        <% if session[:generated_image_urls].present? %>
        <div class="image-container">
        <center>
          <% session[:generated_image_urls].each do |file_path| %>
          <img src="<%= file_path %>" alt="Generated image" style="max-width: 200px;">
        <% end %>
        </center>
        </div>
       <% end %>
 
         

         <% if @assistant_response.present? %>
        <% if user_signed_in? %>
        <div class="download-button text-center mt-3">
          <%= link_to 'Download as PDF',download_latest_response_chat_index_path , class: 'btn btn-sm btn-block' %>
              
        </div>
        <% end %>
        <div class="read-aloud-button text-center mt-3">
        <%= button_tag "Read Response Aloud", type: "button", class: "btn btn-sm btn-block", id: "read-response-aloud" %>
        </div>
        <div class="text-center mt-3">
          <button onclick="copyToClipboard(document.getElementById('responsebox').innerText)" class="btn btn-sm btn-block">Copy to clipboard</button>
        </div>
        <div class="email-response-button text-center mt-3">
          <%= link_to 'Email Response', "mailto:?subject=Conversation%20Response, body=#{@assistant_response}", class: 'btn btn-sm btn-block' %>
        </div> 
      
        <% end %>
        
        <%= form_with url: { controller: "chat", action: "ask" }, method: :post, id: "ask_form",enctype: 'multipart/form-data' do |f| %>
     <div class="form-inline">
       <%= f.label :text, "Query the AI:" %>
       <%= f.text_field :text, class: "form-control input-width", autofocus: true, id: "query-input" %>
       <% if user_signed_in? %>
       <%= f.check_box :generate_image, {checked: false}, "1", "0" %>
       <%= f.label :generate_image, "Generate Image" %>
       <%= f.file_field :document %>
       <% end %>
       <%= f.hidden_field :save_conversation, value: user_signed_in? ? "1" : "0" %>
       <%= f.submit "Submit", class: "btn btn-sm mt-3 btn-block" %>
     </div>
      <% end %>


<p>&nbsp;</p>
<div class="row">
  
    <% if user_signed_in? %>
      <div class="col-md-12 d-flex justify-content-center">
        <%= button_tag "Voice to Text", type: "button", class: "btn btn-sm btn-block", id: "voice-to-text" %>
    
      <%= form_with url: delete_thread_chat_index_path, method: :post, local: true do %>
      <%= submit_tag "Delete Thread", class: "btn btn-sm btn-block" %>
      <% end %>
      <% end %>
      </div>
  
    
        <% unless user_signed_in? %>
          <div class="row" style="padding-top: 1.5em">
            <div class="col">
              <center> <p> Please <%= link_to 'Sign in', new_user_session_path, class: 'btn btn-small' %>  or <%= link_to 'Sign up', new_user_registration_path, class: 'btn btn-small' %>to use voice to text, generate images, or download your responses as PDF files.  This will be a premium feature after the beta.</p></center>
            </div>
         </div>
        <% end %>
      </div>
    </div>
  </div>


<script>
  $(document).ready(function() {
    $('#toggle-conversations').click(function() {
      $('#previous-conversations').toggle();
    });

    $('.conversation-prompt').click(function() {
      let response = $(this).data('response');
      alert(response);
    });
  });
</script>
<script>
$(document).ready(function() {
  
  $('#read-response-aloud').click(function() {
  const assistantResponse = '<%= j @assistant_response %>';
  const voiceId = '21m00Tcm4TlvDq8ikWAM';
  const apiKey = '<%= ENV["ELEVENLABS_API_KEY"] %>';

  const xhr = new XMLHttpRequest();
  xhr.open('POST', '/text-to-speech', true);
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.setRequestHeader('Authorization', `Bearer ${apiKey}`);
  xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
  xhr.responseType = 'arraybuffer'; // Set the response type to arraybuffer

  xhr.onload = function(e) {
    if (xhr.status === 200) {
      const audioBlob = new Blob([xhr.response], { type: 'audio/mpeg' }); // Create a Blob directly from the response
      const audioUrl = URL.createObjectURL(audioBlob);
      const audio = new Audio(audioUrl);
      audio.play();
    } else {
      console.error("Error: Failed to request audio from Eleven Labs API.");
      alert("Error: Failed to request audio from Eleven Labs API.");
    }
  };

  xhr.send(JSON.stringify({ text: assistantResponse, voice_id: voiceId }));
});


  });

</script> 


